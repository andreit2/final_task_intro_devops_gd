pipeline {
   agent any
   parameters {
        string defaultValue: '2.7.6', name: 'RELEASE_VERSION'
        string defaultValue: '2.7.7-SNAPSHOT', name: 'DEVELEPMENT_VERSION'
    }
   tools {
     maven 'maven'
   }
   stages { 
     stage('Cloning Git') {
        steps {
          git branch: 'main',
                url: 'https://github.com/atrofymchuk/spring-petclinic.git'
        }
      }
     stage("Build") {
              steps {
                      withCredentials([gitUsernamePassword(credentialsId: 'at-github', gitToolName: 'Default')]) {  
                      withMaven(maven: 'maven', mavenSettingsConfig: 'mvn-setting-xml') {
                      sh "mvn release:prepare -DreleaseVersion=${params.RELEASE_VERSION} -DdevelopmentVersion=${params.DEVELEPMENT_VERSION}"
                      sh "mvn release:perform -Darguments='-Dmaven.deploy.skip=true'"
                      }
                      }
               }
     }
     stage("Zip arifact and push to the Nexus") {
              steps {
                      sh "tar czvf petclinic_${params.RELEASE_VERSION}_build_number_${BUILD_NUMBER}.tar.gz target/*.jar"
                      withCredentials([usernamePassword(credentialsId: 'nexus-user-credentials', passwordVariable: 'PASSWD', usernameVariable: 'USER')]) {
                      sh "curl -v -u $USER:$PASSWD --upload-file petclinic_${params.RELEASE_VERSION}_build_number_${BUILD_NUMBER}.tar.gz ${env.NEXUS_REPO_URL_INT_RELEASE}/petclinic_${params.RELEASE_VERSION}_build_number_${BUILD_NUMBER}.tar.gz"
                      sh "rm petclinic_${params.RELEASE_VERSION}_build_number_${BUILD_NUMBER}.tar.gz"
                      }
              }    
      }
      stage("Build Docker image with released artifact ") {
              steps {
                      withCredentials([usernamePassword(credentialsId: 'nexus-user-credentials', passwordVariable: 'PASSWD', usernameVariable: 'USER')]) {
                      sh '''
                      wget --user=\$USER --password=\$PASSWD ${env.NEXUS_REPO_URL_INT_RELEASE}/petclinic_${params.RELEASE_VERSION}_build_number_${BUILD_NUMBER}.tar.gz
                      tar xzvf petclinic_${params.RELEASE_VERSION}_build_number_${BUILD_NUMBER}.tar.gz
                      echo 'FROM openjdk:8' > Dockerfile1
                      echo 'VOLUME /tmp' >> Dockerfile1
                      echo 'EXPOSE 8080' >> Dockerfile1
                      echo 'ADD target/spring-petclinic-${params.RELEASE_VERSION}.jar spring-petclinic-${params.RELEASE_VERSION}.jar' >> Dockerfile1
                      echo "ENTRYPOINT ['java'\,'-jar'\,'/spring-petclinic-${params.RELEASE_VERSION}.jar']" >> Dockerfile1
                      docker build -t -f Dockerfile1 $NEXUS_REPO_BUILD_EXT:petclinic_${params.RELEASE_VERSION}_build_${BUILD_NUMBER} .
                      '''
                      }
              }    
      }
      stage('Push image to the Nexus') {
       steps {
           withCredentials([usernamePassword(credentialsId: 'nexus-user-credentials', passwordVariable: 'PASSWD', usernameVariable: 'USER')]) {
                      sh "echo $PASSWD | docker login -u $USER --password-stdin $NEXUS_REPO_BUILD_EXT"
                      sh "docker push $NEXUS_REPO_BUILD_EXT:petclinic_${params.RELEASE_VERSION}_build_${BUILD_NUMBER}"
                      }
           }
       }
      
   }
}
