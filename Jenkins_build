pipeline {
   agent any
  
   tools {
     maven 'maven'
   }
   stages { 
     stage('Cloning Git') {
        steps {
          script {
                    properties([pipelineTriggers([pollSCM('H/15 * * * *')])])
                }
          git branch: 'dev',
                url: 'https://github.com/atrofymchuk/spring-petclinic.git'
        }
      }
     stage("Build") {
              steps {
                      withMaven(maven: 'maven', mavenSettingsConfig: 'mvn-setting-xml') {
                      sh "mvn clean package"
                      }
                      script {
                      TAG_SELECTOR = readMavenPom().getVersion()
                      }
                      echo("TAG_SELECTOR=${TAG_SELECTOR}")
               }
     }
     stage("Zip arifact and push to Nexus") {
              steps {
                      sh 'tar czvf artifact_${BUILD_NUMBER}.tar.gz target/*.jar'
                      withCredentials([usernamePassword(credentialsId: 'nexus-user-credentials', passwordVariable: 'PASSWD', usernameVariable: 'USER')]) {
                      sh "curl -v -u $USER:$PASSWD --upload-file artifact_${BUILD_NUMBER}.tar.gz ${env.NEXUS_REPO_URL_INT}/artifact_${BUILD_NUMBER}.tar.gz"
                      }
              }    
      }
      stage('Build Docker Image') {
           steps {
               sh "docker build -t $NEXUS_REPO_BUILD_EXT:${BUILD_NUMBER} ."
            }
      }
      stage('Push image to Nexus') {
       steps {
           withCredentials([usernamePassword(credentialsId: 'nexus-user-credentials', passwordVariable: 'PASSWD', usernameVariable: 'USER')]) {
                      sh "echo $PASSWD > ./passwd"
                      sh "cat ./passwd | docker login -u $USER --password-stdin $NEXUS_REPO_BUILD_EXT"
                      sh "docker push $NEXUS_REPO_BUILD_EXT:${BUILD_NUMBER}"
                      sh "rm ./passwd"
                      }
           }
       }       
   }
}
